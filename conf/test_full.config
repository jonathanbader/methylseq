/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running full-size tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a full size pipeline test.

    Use as follows:
        nextflow run nf-core/methylseq -profile test_full,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Full test profile'
    config_profile_description = 'Full test dataset to check pipeline function'

    // Input data
    input = "/app/results/samplesheet_full.csv"
    genome = 'GRCh38'
}


def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/009/SRR7961089/SRR7961089_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/009/SRR7961089/SRR7961089_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/003/SRR7961103/SRR7961103_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/003/SRR7961103/SRR7961103_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/002/SRR7961102/SRR7961102_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/002/SRR7961102/SRR7961102_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/004/SRR7961104/SRR7961104_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/004/SRR7961104/SRR7961104_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/000/SRR7961150/SRR7961150_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/000/SRR7961150/SRR7961150_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/001/SRR7961161/SRR7961161_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/001/SRR7961161/SRR7961161_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/004/SRR7961164/SRR7961164_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/004/SRR7961164/SRR7961164_2.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/003/SRR7961163/SRR7961163_1.fastq.gz
// ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR796/003/SRR7961163/SRR7961163_2.fastq.gz
